{"version":3,"sources":["Components/Dancer/index.js","Components/DanceFloor/index.js","Components/Visualizer/index.js","App.js","serviceWorker.js","index.js"],"names":["Dancer","index","height","useContext","soundContext","position","Math","max","attach","args","color","side","DoubleSide","createContext","DanceFloor","num","analyser","player","play","rest","mesh","useRef","useState","Array","fill","soundArray","setSoundArray","useFrame","frequencyData","Uint8Array","frequencyBinCount","getByteFrequencyData","ref","rotation","BackSide","current","playing","onClick","Provider","value","dancers","i","push","key","length","makeDancers","CameraController","useThree","camera","gl","useEffect","controls","OrbitControls","domElement","minDistance","maxDistance","dispose","Visualizer","ready","setReady","playerOptions","pausedAt","playedAt","setNum","track","setTrack","audioContext","window","AudioContext","webkitAudioContext","createAnalyser","currentSource","currentBuffer","aSize","fftSize","pow","ceil","log","fetch","then","res","arrayBuffer","decodeAudioData","audioBuffer","useCallback","currentTime","stop","source","createBufferSource","buffer","connect","destination","start","style","top","left","transform","zIndex","background","border","cursor","fontSize","borderRadius","onChange","e","target","defaultChecked","pixelRatio","devicePixelRatio","invalidateFrameloop","width","lookAt","bottom","href","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c5aae7a0.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { soundContext } from '../DanceFloor/index';\nimport { DoubleSide } from 'three';\n\nconst Dancer = ({ index }) => {\n\n    const height = useContext(soundContext)[index] / 100;\n    return (\n        <mesh position={[/* ...position*/ 0, 0, Math.max(0, height)]}>\n            {/* <boxBufferGeometry attach=\"geometry\" args={[size[0] - .1, size[1] - .1, 1]} /> */}\n            <ringBufferGeometry attach=\"geometry\" args={[index * .3 + 1.3, index * .3 + 1.2, 6]} />\n            <meshToonMaterial\n                attach=\"material\"\n                color={`hsl(${height * 128},100%, 50%)`}\n                //transparent\n                //opacity={height <= 0.51 ? 1 : (height <= 0.75 ? .98 : (height <= 1 ? .96 : (height <= 1.5 ? .94 : .92)))}\n                side={DoubleSide}\n            />\n        </mesh>\n    )\n}\n\nexport default Dancer\n","import React, { useRef, useState, createContext } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport { DoubleSide, BackSide } from 'three';\nimport Dancer from '../Dancer';\n\nconst makeDancers = (num) => {\n    const dancers = [];\n    for (let i = 0; i < num; i++) {\n        dancers.push(<Dancer key={`danc${dancers.length}`} index={dancers.length} />)\n    }\n    return dancers;\n}\n\nexport const soundContext = createContext();\n\nconst DanceFloor = ({ num, analyser, player, play, ...rest }) => {\n    const mesh = useRef();\n    const [soundArray, setSoundArray] = useState(() => (Array(num).fill(0)));\n\n    useFrame(() => {\n        if (!analyser) return;\n        var frequencyData = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(frequencyData);\n        setSoundArray(frequencyData);\n    })\n\n    return (\n        <mesh\n            ref={mesh}\n            position={[0, 0, 0]}\n            rotation={[0, 0, 0]}\n            {...rest}\n        >\n            <sphereBufferGeometry attach=\"geometry\" args={[90]} />\n            <meshToonMaterial attach=\"material\" color={`hsl(${Math.max(...soundArray) + 100}, 100%, 50%)`} side={BackSide} />\n            {\n                !player.current.playing &&\n                <mesh onClick={play}>\n                    <ringBufferGeometry attach=\"geometry\" args={[1, 0.3, 3]} />\n                    <meshLambertMaterial attach=\"material\" color={`hsl(${Math.max(...soundArray)}, 100%, 50%)`} side={DoubleSide} />\n                </mesh>\n            }\n            {\n                player.current.playing &&\n                <group position={[0, 0, Math.max(...soundArray) / 100]} onClick={play}>\n                    <mesh position={[-.3, 0, 0]}>\n                        <planeBufferGeometry attach=\"geometry\" args={[.3, 1]} />\n                        <meshToonMaterial attach=\"material\" color={`hsl(${Math.max(...soundArray)}, 100%, 50%)`} side={DoubleSide} />\n                    </mesh>\n                    <mesh position={[.3, 0, 0]}>\n                        <planeBufferGeometry attach=\"geometry\" args={[.3, 1]} />\n                        <meshToonMaterial attach=\"material\" color={`hsl(${Math.max(...soundArray)}, 100%, 50%)`} side={DoubleSide} />\n                    </mesh>\n                </group>\n            }\n            <soundContext.Provider value={soundArray}>\n                {makeDancers(num)}\n            </soundContext.Provider>\n        </mesh>\n    )\n}\n\nexport default DanceFloor\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport { Canvas, useThree } from 'react-three-fiber'\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport DanceFloor from '../DanceFloor';\n\nfunction nearestPow2(aSize) {\n    return Math.pow(2, Math.ceil(Math.log(aSize) / Math.log(2)));\n}\n\nconst CameraController = () => {\n    const { camera, gl } = useThree();\n    useEffect(\n        () => {\n            const controls = new OrbitControls(camera, gl.domElement);\n\n            controls.minDistance = 3;\n            controls.maxDistance = 20;\n            return () => {\n                controls.dispose();\n            };\n        },\n        [camera, gl]\n    );\n    return null;\n}\n\nconst Visualizer = () => {\n    const [ready, setReady] = useState(false);\n    const playerOptions = useRef({\n        playing: false,\n        pausedAt: 0,\n        playedAt: 0\n    });\n    const [num, setNum] = useState(16);\n    const [track, setTrack] = useState('Fearless')\n    const audioContext = useRef(new (window.AudioContext || window.webkitAudioContext)());\n    const analyser = useRef(audioContext.current.createAnalyser());\n    const currentSource = useRef(null);\n    const currentBuffer = useRef(null);\n\n    useEffect(() => {\n        analyser.current.fftSize = nearestPow2(num) * 2;\n    }, [num])\n\n    useEffect(() => {\n        fetch(\"/\" + track + \".mp3\")\n            .then((res) => {\n                res.arrayBuffer().then((value => {\n                    audioContext.current.decodeAudioData(value)\n                        .then((audioBuffer) => {\n                            currentBuffer.current = audioBuffer;\n                            setReady(true);\n                        });\n                }))\n            });\n        return () => {\n            if (playerOptions.current.playing) play();\n            currentBuffer.current = null;\n            playerOptions.current = {\n                playing: false,\n                pausedAt: 0,\n                playedAt: 0\n            };\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [track]);\n\n    const play = useCallback(\n        () => {\n\n            if (!playerOptions.current.playing) {\n                const source = audioContext.current.createBufferSource();\n                source.buffer = currentBuffer.current;\n                source.connect(analyser.current);\n                analyser.current.connect(audioContext.current.destination);\n                currentSource.current = source;\n                currentSource.current.start(0, playerOptions.current.pausedAt);\n                playerOptions.current.playedAt = audioContext.current.currentTime - playerOptions.current.pausedAt;\n            } else {\n                playerOptions.current.pausedAt = audioContext.current.currentTime - playerOptions.current.playedAt;\n                currentSource.current.stop();\n            }\n            return playerOptions.current.playing = !playerOptions.current.playing;\n        },\n        [],\n    );\n\n    return (\n        <>\n            <div style={{\n                color: \"black\",\n                position: \"absolute\",\n                top: \"20px\",\n                left: \"50%\",\n                transform: \"translateX(-50%)\",\n                zIndex: 10,\n            }}>\n                <button\n                    style={{\n                        background: \"none\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        fontSize: \"1.1em\",\n                        color: \"#222\"\n                    }}\n                    onClick={() => {\n                        if (playerOptions.current.playing)\n                            play();\n                        playerOptions.current = {\n                            playing: false,\n                            pausedAt: 0,\n                            playedAt: 0\n                        };\n                        play();\n                    }}\n                >Replay</button>\n                <select\n                    style={{ background: \"none\", border: \"2px solid\", borderRadius: \"3px\", fontSize: \"1.1em\" }}\n                    onChange={e => { setTrack(e.target.value) }}\n                >\n                    <option value=\"Fearless\" defaultChecked>Lost Sky - Fearless [NCS Release]</option>\n                    <option value=\"Invincible\">DEAF KEV - Invincible _NCS Release_</option>\n                </select>\n                <select\n                    style={{ background: \"none\", border: \"2px solid\", borderRadius: \"3px\", fontSize: \"1.1em\" }}\n                    onChange={e => { setNum(e.target.value) }}\n                >\n                    <option value={16} defaultChecked>16</option>\n                    <option value={32}>32</option>\n                    <option value={64}>64</option>\n                    <option value={128}>128</option>\n                    <option value={256}>256</option>\n                </select>\n            </div>\n            <Canvas\n                pixelRatio={window.devicePixelRatio}\n                invalidateFrameloop={false}\n                style={{ position: 'absolute', left: '0', top: '0', width: '100%', height: '100%' }}\n                camera={{ position: [0, -2, 3] }}\n            >\n                <CameraController />\n                <ambientLight />\n                <pointLight position={[0, 0, 20]} color={0xff0000} />\n                <pointLight position={[-20, 0, 20]} color={0x00ff00} />\n                <pointLight position={[20, 0, 20]} color={0x0000ff} />\n                <directionalLight position={[0, 0, 20]} lookAt={[4, 4, 4]} color={0xff0000} />\n                {\n                    ready &&\n                    <DanceFloor num={num} analyser={analyser.current} player={playerOptions} play={play} />\n                }\n            </Canvas>\n            <span style={{ position: \"absolute\", zIndex: 1000, bottom: 0, left: 0 }}>Music Provided By <a href=\"https://ncsmusic.com/\">NoCopyrightSounds</a></span>\n        </>\n    )\n}\n\nexport default Visualizer\n","import React from 'react';\nimport './App.css';\nimport Visualizer from './Components/Visualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}